% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tracks_object.R
\name{as_tracks}
\alias{as_tracks}
\alias{is.tracks}
\title{Create a tracks object from a data.frame.}
\usage{
as_tracks(tr, frame_rate, resolution, meta_data = NULL, px_per_cm = NULL,
  minimal = TRUE)

is.tracks(x)
}
\arguments{
\item{tr}{Data.frame with tracking data (from read in functions).}

\item{frame_rate}{Frames per second.}

\item{resolution}{Provide standard name for resolution (e.g. "720") or actual
resolution in pixels (e.g. "1920x1080"). Stored for later use, also
used as default tracking window (boundary).}

\item{meta_data}{Optionally supply a data.frame with meta data about the
trials, such as treatments. Can include a column named \code{trial} that
needs to match \code{levels(tr$trial)}. Otherwise this column is created,
using \code{levels(tr$trial)}, and identical ordering is assumed.}

\item{px_per_cm}{Length scaling factor, optional.}

\item{minimal}{When TRUE, the minimum amount of components (see list below)
are including in the object. When FALSE, the group, pairs and trial
components will already be generated.}

\item{x}{An object.}
}
\value{
A tracks object.
}
\description{
Create a tracks object from a data.frame.
}
\section{Functions}{
\itemize{
\item \code{is.tracks}: Test if object is of class tracks.
}}
\section{Object structure}{


The tracks object is a \code{list} with the following tables:
\describe{
  \item{\code{tr}}{\code{data.frame} organized by trial, animal, frame.
  Useful for storing individual variables such as location, speed,
  orientation, distance to object etc.}
  \item{\code{group}}{\code{data.frame} organized by trial, frame. Useful for
  storing group level variables, such as polarization, centrality, group
  size, mean neighbour distance etc.}
  \item{\code{pairs}}{\code{data.frame} organized by trial, pair of animals,
  frame. Useful for storing social variables, such as distance, relative
  orientation, vector correlation etc.}
  \item{\code{location}}{\code{data.frame} organized by trial, xbin, ybin.
  Useful for aggregate data for spatial heatmaps etc.}
  \item{\code{meta_data}}{\code{data.frame} organized by trial. Contains
  information about the trial, such as group origin, treatment, time of
  testing etc.}
  \item{\code{animal}}{\code{data.frame} organized by trial and animal,
  containing animal level measurements (nested in trial), such as average
  speed.}
  \item{\code{trial}}{\code{data.frame} organized by trial, containing trial
  level measurements, such as average speed.}
  \item{\code{params}}{A \code{list} with general experiment parameters, such
  as frame_rate, scale, resolution etc.}
}
 \code{tracks}, \code{meta_data} and \code{params} are always present, others
 may not be. This is to preserve memory space. Order is not garantueed, refer
 by name if you need to access them. By definiton, this function create a
 tracks objects with the tracks, meta.data and params, but no other entries.

 Methods for common generics may be available.
}

\section{Parallel computing}{


Trackr utilizes parallel computing as implemented by the multidplyr package.
This means both the $tr and $pairs tables are always split by trial, and kept
on seperate nodes as so called 'party_df's'. The other tables are typically
small enough not to warrant the use of a cluster. If necessary, the tables
that are split can be combined again using \code{dplyr::collect()}.
}
\seealso{
\code{\link{read_idTracker}}
}

